<?xml version="1.0"?>
<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
    
<hibernate-configuration>

	<session-factory>
		<!-- Database connection settings -->
		<!-- 数据库驱动 -->
		<property name="connection.driver_class">org.gjt.mm.mysql.Driver</property>
		<!-- 数据库地址 -->
		<property name="connection.url">jdbc:mysql://localhost/test</property>
		<!-- 用户名 -->
		<property name="connection.username">root</property>
		<!-- 密码 -->
		<property name="connection.password">1234</property>
		
		<!-- 数据库连接池  在连接池中存放一些数据  这样就不必每次去访问数据库 -->
		<property name="connection.pool_size">1</property>
		
		<!-- SQL 方言 使用的什么数据库-->
		<property name="dialect">org.hibernate.dialect.MySQLDialect</property>
		
		<!-- 上下文会话方式  当前会话通过当前执行的线程来跟踪和界定。   -->
		<property name="current_session_context_class">thread</property>
		
		<!-- 禁用第二级缓存 -->
		<property name="cache.provider_class">org.hibernate.cache.NoCacheProvider</property>
		
		<!-- 格式化SQL语句  代替用问好显示的参数 -->
		<property name="show_sql">true</property>
		
		<!-- ①create：
			每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
			②create-drop ：
			每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
			③update：
			最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
			④validate ：
			每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。 -->
		<property name="hbm2ddl.auto">create</property>
		
		<mapping resource="Event.hbm.xml"/>

    </session-factory>

</hibernate-configuration>